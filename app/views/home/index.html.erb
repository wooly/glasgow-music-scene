<div id="chart"></div>
<div id="info">
  <h2 id="title">Test</h2>
  <dl>
    <dt>Twitter</dt>
    <dd id="twitter">unknown</dd>
    <dt>Members</dt>
    <dd id="members">One<br />Two<br />Three</dd>
  </dl>
</div>
<script>
$(document).ready(function() {
  var width = $(window).width(),
      height = $(window).height(),
      nodes = <%= Band.find(:all, :order => "id").to_json.to_s.html_safe %>,
      links = <%= Link.all.to_json.html_safe %>;
      
  $('#chart').live('click', function(event) {
    $('#info').hide();
    clearSelections();
  });
  
  function find(value){
      var item = $.grep(nodes, function(item) {
        return item.id == value;
      });
      return nodes.indexOf(item[0]);
  };
  
  function showInfo(d, i) {
    clearSelections();
    var $elem = $(d3.event.target);
    $elem.attr("class", "circle selected");
    $elem.attr("style", "fill: #FFF");
    d3.event.stopPropagation();

    if (d.members == undefined) {
      $('#members').text("unknown");
    } else {
      $('#members').html(d.members.join("<br />"));
    }

    connections = [];
    $.map(links, function(o, i) {
      if (d == o.source || d == o.target) connections.push(o);
    });
    $('#title').text(d.name);
    
    if (d.twitter === "" || d.twitter == undefined) {
      $('#twitter').text("unknown");
    } else {
       $twitterAnchor = $("<a href=http://twitter.com/#!/" + d.twitter.slice(1) + ">" + d.twitter + "</a>");
       $('#twitter').html($twitterAnchor);
    }
    $('#info').show();
  };
  
  function clearSelections() {
    var $selection = $('.selected');
    $selection.attr("style", "fill: #1F77B4");
    $selection.removeClass("selected");
  }

  var color = d3.scale.category20();

  var force = d3.layout.force()
  .charge(-300)
  .linkDistance(20)
  .size([width, height]);

  $.each(links, function(index, value) {
    var source_index = find(value.source_id),
        dest_index= find(value.dest_id);

    value.source = source_index;
    value.target = dest_index;
  });

  force
    .nodes(nodes)
    .links(links)
    .start();
    
  var svg = d3.select("#chart")
    .append("svg")
    .attr("pointer-events", "all")
    .attr("viewBox", "0 0 0 0") 
    .attr("preserveAspectRatio", "xMinYMin meet")
    .call(d3.behavior.zoom().on("zoom", redraw))
    .append('svg:g');

  $('#chart').css('position', 'absolute');

  svg.append('svg:rect')
      .attr('width', width)
      .attr('height', height)
      .attr('fill', 'white');

  function redraw() {
    svg.attr("transform",
        "translate(" + d3.event.translate + ")"
        + " scale(" + d3.event.scale + ")");
  }

    var link = svg.selectAll("line.link")
      .data(links)
      .enter().append("line")
      .attr("class", "link")
      .style("stroke-width", function(d) { return 2; });

    var node = svg.selectAll("g.node")
      .data(nodes)
      .enter().append("svg:g")
      .attr("class", "node")
      .call(force.drag);
  
    node.append("circle")
        .attr("class", "circle")
        .attr("r", 4)
        .attr("stroke-width", 1)
        .attr("stroke", "steelblue")
        .style("fill", function(d) { return color(d.group); })
        .on('click', showInfo);
  

    node.append("svg:text")
        .attr("class", "nodetext")
        .attr("dx", 12)
        .attr("dy", ".35em")
        .text(function(d) { return d.name });

    force.on("tick", function() {
      link.attr("x1", function(d) { return d.source.x; })
      .attr("y1", function(d) { return d.source.y; })
      .attr("x2", function(d) { return d.target.x; })
      .attr("y2", function(d) { return d.target.y; });

      node.attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });
    });
});
</script>
<a href="https://twitter.com/share?count=none" class="twitter-share-button" data-lang="en">Share</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>
